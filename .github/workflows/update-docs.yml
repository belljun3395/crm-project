name: Update Documentation

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'backend/src/main/kotlin/**/*UseCase.kt'
      - 'backend/src/main/kotlin/**/domain/**/*.kt'
      - 'backend/src/main/kotlin/**/controller/**/*.kt'
  
  # 수동 실행 옵션 (필요시)
  workflow_dispatch:

jobs:
  update-documentation:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup Python for Claude CLI
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    
    - name: Install Claude CLI
      run: |
        pip install anthropic
        
    - name: Detect UseCase changes
      id: detect-changes
      run: |
        echo "Detecting UseCase and Domain changes..."
        
        # workflow_dispatch인 경우 강제로 변경된 것으로 처리 (테스트용)
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "changed=true" >> $GITHUB_OUTPUT
          echo "files<<EOF" >> $GITHUB_OUTPUT
          echo "Manual trigger - testing documentation update" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        else
          CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.event.after }} | grep -E "(UseCase\.kt|domain/.*\.kt|controller/.*\.kt)" || echo "")
          
          if [ -n "$CHANGED_FILES" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "files<<EOF" >> $GITHUB_OUTPUT
            echo "$CHANGED_FILES" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi
        fi
    
    - name: Generate documentation updates
      if: steps.detect-changes.outputs.changed == 'true'
      run: |
        echo "Analyzing changed files:"
        echo "${{ steps.detect-changes.outputs.files }}"
        
        # 간단한 문서 업데이트 (테스트용)
        echo "## 자동 문서 업데이트 - $(date)" >> docs/Domain-and-UseCase-Flows.md
        echo "" >> docs/Domain-and-UseCase-Flows.md
        echo "변경된 파일들:" >> docs/Domain-and-UseCase-Flows.md
        echo '${{ steps.detect-changes.outputs.files }}' >> docs/Domain-and-UseCase-Flows.md
        echo "" >> docs/Domain-and-UseCase-Flows.md
      env:
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        
    - name: Check for documentation changes
      id: doc-changes
      run: |
        git add docs/Domain-and-UseCase-Flows.md
        if git diff --staged --quiet; then
          echo "no_changes=true" >> $GITHUB_OUTPUT
          echo "No changes detected in documentation files"
        else
          echo "no_changes=false" >> $GITHUB_OUTPUT
          echo "Changes detected in documentation files"
          git diff --staged --name-only
        fi
    
    - name: Create Pull Request
      if: steps.doc-changes.outputs.no_changes == 'false'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: |
          📚 Auto-update documentation based on code changes
          
          Changed files:
          ${{ steps.detect-changes.outputs.files }}
          
          🤖 Generated with Claude Code automation
        title: "📚 Documentation Update - ${{ github.run_number }}"
        body: |
          ## 📚 자동 생성된 문서 업데이트
          
          다음 파일들의 변경사항을 반영하여 문서를 업데이트했습니다:
          
          ### 🔄 변경된 파일들:
          ```
          ${{ steps.detect-changes.outputs.files }}
          ```
          
          ### 📋 업데이트된 문서:
          - Domain-and-UseCase-Flows.md
          
          ### 🤖 자동화 정보
          - **생성 도구**: Claude Code CLI
          - **트리거**: 코드 변경 감지
          - **실행 시간**: ${{ github.event.head_commit.timestamp }}
          
          ### ✅ 리뷰 포인트
          - [ ] UseCase 플로우 다이어그램 정확성 확인
          - [ ] Domain Entity 관계 반영 여부 확인
          - [ ] API 스펙 업데이트 확인
          - [ ] 비즈니스 로직 설명 정확성 확인
          
          ---
          
          > 이 PR은 자동으로 생성되었습니다. 내용을 검토한 후 머지해주세요.
        branch: docs/auto-update-${{ github.run_number }}
        branch-suffix: timestamp
        delete-branch: true
        labels: |
          documentation
          auto-generated
        assignees: |
          ${{ github.actor }}
        reviewers: |
          ${{ github.actor }}